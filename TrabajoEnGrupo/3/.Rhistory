getwd()
library(elemeStatLearn)
library(elemStatLearn)
library(ElemStatLearn)
library(ElemStatLearn)
library(ElemStatLearn)
library("ElemStatLearn", lib.loc="./")
x<-1
data(bone)
View(bone)
plot(bone$age,bone$spnbmd,pch=19,col=((bone$gender=="male")+1))
clc
data(marketing)
plot(bone$age,bone$spnbmd,pch=19,col=((bone$gender=="male")+1))
View(marketing)
View(marketing)
boxplot(marketing$Income  ~ marketing$Marital,col="grey",xaxt="n",ylab="Income",xlab="")
axis(side=1,at=1:5,labels=c("Married","Living together/not married","Divorced or deparated","Widowed","Nevermarried"),last=2)
boxplot(marketing$Income ~ marketing$Marital,col="grey",xaxt="n",ylab="Income",xlab="")
axis(side=1,at=1:5,labels=c("Married","Living together/not married","Divorced or separated","Widowed","Nevermarried"),las=2)
axis(side=1,at=1:5,labels=c("Married","Living together/not married","Divorced or deparated","Widowed","Nevermarried"),las=2)
library(datasets)
data(iris)
library(datasets)
data(iris)
View(iris)
head(iris$Sepla.Length)
head(iris$Sepal.Length)
?subset
library(airquality)
library(airquality)
library(airquality)
irisSubset<-subset(iris,select=Sepal.Length)
View(irisSubset)
irisSubset<-subset(iris,select=Sepal.Length:Petal.Width)
View(irisSubset)
dist(irisSubset)
head(dist(irisSubset))
distxy<-dist(irisSubset)
hClustering<-hclust(distxy)
plot(hClustering)
?rect.hclust
x<-rect.hclust(hClustering,k=3,border="re")
x<-rect.hclust(hClustering,k=3,border="red")
x<-rect.hclust(hClustering,k=2,border="red")
x<-rect.hclust(hClustering,k=4,border="red")
plot(hClustering)
x<-rect.hclust(hClustering,k=4,border="red")
x<-rect.hclust(hClustering,h=4,border="red")
plot(hClustering)
x<-rect.hclust(hClustering,h=3,border="red")
quiz3question4 <- read.csv("C:/Users/EQUIPO JOSE/Downloads/quiz3question4.csv")
View(quiz3question4)
View(quiz3question4)
View(quiz3question4)
View(quiz3question4)
plot(quiz3question4$x,quiz3question4$y)
plot(quiz3question4$x,quiz3question4$y,pch=19)
plot(quiz3question4$x,quiz3question4$y,pch=19,col="blue")
head(dist(irisSubset))
KmeansObj<-kmeans(quiz3question4,center=)
?kmeans
KmeansObj<-kmeans(quiz3question4,center=2)
names(kmeansObj)
names(kmeansObj)
names(KmeansObj)
KmeansObj$cluster
plot(x,y,col=kmeansObj$cluster,pch=19,cex=2)
points(kmeansObj$centers,col=1:3,pch=3,cex=3,lwd=3)
points(KmeansObj$centers,col=1:3,pch=3,cex=3,lwd=3)
plot(x,y,col=kmeansObj$cluster,pch=19,cex=2)
plot(quiz3question4$x,quiz3question4$y,col=kmeansObj$cluster,pch=19,cex=2)
plot(quiz3question4$x,quiz3question4$y,col=KmeansObj$cluster,pch=19,cex=2)
points(KmeansObj$centers,col=1:3,pch=3,cex=3,lwd=3)
rm(list = ls())
library(ElemenStatLearn)
library(ElemStatLearn)
library("ElemStatLearn", lib.loc="./")
library("ElemStatLearn", lib.loc="./")
library(ElemStatLearn)
library("ElemStatLearn", lib.loc="./")
data(bone)
data(zip.train)
View(zip.train)
View(zip.train)
im = zip2image(zip.train,3)
image(im)
svd1 <- svd(scale(im))
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singluar vector",ylab="Variance explained")
im = zip2image(zip.train,8)
image(im)
svd1 <- svd(scale(im))
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singluar vector",ylab="Variance explained")
svd1 <- svd(im)
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singluar vector",ylab="Variance explained")
abline(c(0,0.99))
abline(c(0,0.98))
abline(c(0,0.98))
abline(c(0,0.99))
abline(c(0,0.98123673257453))
im = zip2image(zip.train,18)
image(im)
svd1 <- svd(im)
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singluar vector",ylab="Variance explained")
abline(c(0,0.44))
loansData <- read.csv("C:/Users/EQUIPO JOSE/Dropbox/Data Analysis/Assignement 1/loansData.csv", header=F)
View(loansData)
getwd()
load("C:/Users/EQUIPO JOSE/Dropbox/8 semestre/Estadistica Descriptiva/TrabajoIndividual/1/.RData")
getwd()
setwd("C:/Users/EQUIPO JOSE/Dropbox/8 semestre/Estadistica Descriptiva/TrabajoEnGrupo/3")
BD<-read.csv2("BD_completa.csv",enc="latin1")
View(BD)
# de la variable Nivel Academico
tablaNivelA<-with(BD,sort(table(Nivel.Academ),decreasing=T))
tablaNivelA
BD<-read.csv2("BD_completa.csv",enc="latin1")
# Construye una tabla de frecuencia ordenada de mayora a menor
# de la variable Nivel Academico
tablaNivelA<-with(BD,sort(table(Nivel.Academ),decreasing=T))
tablaNivelA
# Construye una tabla en donde se obtienen los porcentajes.
tablaNivelAp<-tablaNivelA/sum(tablaNivelA)*100
tablaNivelAp
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,0,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+0.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,0,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+0.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,0,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+0.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,0,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+2.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,0,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+2.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
# Construye una tabla en donde se obtienen los porcentajes.
tablaNivelAp<-tablaNivelA/sum(tablaNivelA)*100
tablaNivelAp
BD<-read.csv2("BD_completa.csv",enc="latin1")
# Construye una tabla de frecuencia ordenada de mayora a menor
# de la variable Nivel Academico
tablaNivelA<-with(BD,sort(table(Nivel.Academ),decreasing=T))
tablaNivelA
# Construye una tabla en donde se obtienen los porcentajes.
tablaNivelAp<-tablaNivelA/sum(tablaNivelA)*100
tablaNivelAp
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,0,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+2.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,6,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+2.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,6,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+2.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
# Construye una tabla de frecuencia ordenada de mayora a menor
# de la variable Forma audio
tablaFormaA<-with(BD,sort(table(Forma.audio),decreasing=T))
tablaFormaA
# COnstruye diagrama de pastel para formato de audio
slices <-tablaFormaA
lbls <- c("Parlantes","Audifonos")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Forma de audios")
# Construye una tabla de frecuencia ordenada de mayora a menor
# de la variable Forma audio
tablaFormaA<-with(BD,sort(table(Forma.audio),decreasing=T))
tablaFormaA
BD<-read.csv2("BD_completa.csv",enc="latin1")
# Construye una tabla de frecuencia ordenada de mayora a menor
# de la variable Nivel Academico
tablaNivelA<-with(BD,sort(table(Nivel.Academ),decreasing=T))
tablaNivelA
# Construye una tabla en donde se obtienen los porcentajes.
tablaNivelAp<-tablaNivelA/sum(tablaNivelA)*100
tablaNivelAp
# Graficación del diagrama de barras para Nivel academico
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,6,0,0))
b1<-barplot(tablaNivelAp,horiz=TRUE,las=1,xlim=c(0,100),
main="Nivel academico",
xlab="Procentaje")
text(tablaNivelAp+2.5,b1,paste(format(tablaNivelAp,digits=2),"%"))
par(op)
tablaNivelAp<-tablaNivelA/sum(tablaNivelA)*100
tablaFormaA
View(BD)
BD<-read.csv2("BD_completa.csv",enc="latin1")
# Construye una tabla de frecuencia ordenada de mayora a menor
# de la variable Forma audio
tablaFormaA<-with(BD,sort(table(Forma.audio),decreasing=T))
tablaFormaA
# COnstruye diagrama de pastel para formato de audio
slices <-tablaFormaA
lbls <- c("Parlantes","Audifonos")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Forma de audios")
# COnstruye diagrama de pastel para formato de audio
slices <-tablaFormaA
lbls <- c("Audifonos","Parlantes")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Forma de audios")
# COnstruye diagrama de pastel para ¿Le Gusta estudiar con musica?
Gusta.estud.musica<-with(BD,sort(table(Gusta.estud.musica),decreasing=T))
Gusta.estud.musica
slices <-Gusta.estud.musica
lbls <- c("Si","No")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="¿Le Gusta estudiar con musica? ",radius=1)
# Construye una tabla de frecuencia ordenada de mayora a menor
# del Genero Musical
GeneroMusical <-with(BD,sort(table(Genero.musical),decreasing=T))
GeneroMusical
BD<-read.csv2("BD_completa.csv",enc="latin1")
# del Genero Musical
GeneroMusical <-with(BD,sort(table(Genero.musical),decreasing=T))
GeneroMusical
# Construye una tabla en donde se obtienen los porcentajes.
GeneroMusicalp<-GeneroMusical/sum(GeneroMusical)*100
GeneroMusicalp
op<-par(no.readonly = TRUE)
par(mar=op$mar+c(0,3,0,0))
b1<-barplot(GeneroMusicalp,horiz=TRUE,las=1,xlim=c(0,100),
main="Genero Musical ",
xlab="Procentaje")
text(GeneroMusicalp+0.5,b1,paste(format(GeneroMusicalp,digits=2),"%"))
par(op)
summary(BD$Tiempo.con.musica) # importante tener en cuenta
summary (BD$Tiempo.sin.musica) # importante tener en cuenta
h2<-hist(BD$Tiempo.con.musica,main="Tiempo con musica",col="gray",xlab="Tiempo en segundos")
lines(density(BD$Tiempo.con.musica))
h2<-hist(cost_polit$EDAD,nclass=100)
h1<-hist(BD$Edad,nclass=100)
h3<-hist(cost_polit$EDAD,nclass=4)
h3<-hist(BD$Edad,nclass=4)
h1<-hist(BD$Edad)
h1
h1<-hist(BD$Edad)
h1
h1<-hist(BD$Edad)
h1<-hist(BD$Edad)
h1<-hist(BD$Edad)
# Histograma de  Tiempo con musica
h2<-hist(BD$Tiempo.con.musica,main="Tiempo con musica",col="gray",xlab="Tiempo en segundos")
lines(density(BD$Tiempo.con.musica))
h1<-hist(BD$Edad)
h4<-hist(BD$Edad),freq=F)
h4<-hist(BD$Edad),freq=F)
h1<-hist(BD$Edad)
h1
h4
h4<-hist(BD$Edad,freq=F)
h4
lines(density(BD$Edad)),lty=2,col="red",lwd=3)
lines(density(BD$Edad),lty=2,col="red",lwd=3)
h1<-hist(BD$Edad)
h1
h4<-hist(BD$Edad)
h4
lines(density(BD$Edad),lty=2,col="red",lwd=3)
h4<-hist(BD$Edad,freq=F)
h4
lines(density(BD$Edad),lty=2,col="red",lwd=3)
Estimación de la densidad mediante un kernel.
h4<-hist(BD$Edad,freq=F)
h4
lines(density(BD$Edad),lty=2,col="red",lwd=3)
#------
# Mejora en la presentación del histograma
# Y su estimación de función de densidad.
h5<-hist(cost_polit$EDAD,freq=F,main="Histograma de EDAD",
ylab="Densidad",xlab="Edad",xlim=c(14,35))
lines(density(cost_polit$EDAD),lty=3,col="red",lwd=3)
h1<-hist(cost_polit$EDAD)
h1
h1<-hist(BD$Edad)
h1
h4<-hist(BD$Edad,freq=F)
h4
lines(density(BD$Edad),lty=2,col="red",lwd=3)
h1<-hist(BD$Edad)
h1
summary(BD$Tiempo.con.musica) # importante tener en cuenta
summary (BD$Tiempo.sin.musica) # importante tener en cuenta
# Boxplot Para tiempo con musica
boxplot(BD$Tiempo.con.musica,data=mtcars, main="Tiempo con musica",
ylab="Segundos")
boxplot(BD$Tiempo.sin.musica,data=mtcars, main="Tiempo sin musica",
ylab="Segundos")
h2<-hist(BD$Tiempo.con.musica,main="Tiempo con musica",col="gray",xlab="Tiempo en segundos")
lines(density(BD$Tiempo.con.musica))
h2<-hist(breaks=7,BD$Tiempo.sin.musica,main="Tiempo sin musica",col="gray",xlab="Tiempo en segundos")
h2<-hist(BD$Tiempo.con.musica,main="Tiempo con musica",col="gray",xlab="Tiempo en segundos")
lines(density(BD$Tiempo.con.musica))
h4<-hist(BD$Tiempo.con.musica,freq=F)
lines(density(BD$Tiempo.con.musica),lty=2,col="red",lwd=3)
h4<-hist(BD$Tiempo.con.musica)
lines(density(BD$Tiempo.con.musica),lty=2,col="red",lwd=3)
h4<-hist(BD$Tiempo.con.musica,freq=F,xlab="Tiempo en segundos")
lines(density(BD$Tiempo.con.musica),lty=2,col="red",lwd=3)
# Estimación de la densidad mediante un kernel.
h4<-hist(BD$Tiempo.con.musica,freq=F,xlab="Tiempo en segundos",main="Tiempo con musica")
lines(density(BD$Tiempo.con.musica),lty=2,col="red",lwd=3)
# Estimación de la densidad mediante un kernel sin musica
h4<-hist(BD$Tiempo.sin.musica,freq=F,xlab="Tiempo en segundos",main="Tiempo sin musica")
lines(density(BD$Tiempo.con.musica),lty=2,col="red",lwd=3)
# Histograma de  Tiempo con musica
h2<-hist(BD$Tiempo.con.musica,main="Tiempo con musica",col="gray",xlab="Tiempo en segundos")
lines(density(BD$Tiempo.con.musica))
# Histograma de Tiempo sin musica
h2<-hist(breaks=7,BD$Tiempo.sin.musica,main="Tiempo sin musica",col="gray",xlab="Tiempo en segundos")
